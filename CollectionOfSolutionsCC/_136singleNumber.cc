#include "Solution.h"

int Leetcode101_200::Solution::singleNumber(vector<int>& nums)
{
    // 本题要求找出一组数中只出现过一次的数字
    // 最朴素的解法，也是不太可能被面试官认同的方案是用哈希表存储所有出现过的数字，之后再遍历一遍整个哈希表找出出现次数为1的那个元素
    // 本题的应用场景很可能是数据库存储格式 (RAID) 模式恢复数据的情况
    // 如果我们每次恢复数据都要用到一个临时的哈希表，显然会导致很大的服务器内存消耗，这不是我们想要的
    // 如果熟悉位运算的人，肯定了解下面的恒等式
    // (a ^ b) ^ b = a
    // 同时，由于异或表达式有和四则运算一样的表现形式
    // 通过交换律，有
    // ((((a ^ b) ^ b) ^ c) ^ c) == ((((b ^ b) ^ c) ^ c) ^ a)
    // 因而我们会发现这道题有完全一样的形式
    // 因为除了出现一次的那个元素 a，其它所有元素都出现了偶数次，因而，我们只需要对整个数组取一遍异或即可拿到结果
    // 代码如下：
    int n = nums.size(), res = 0;
    for(int i = 0; i < n; ++i)
    {
        res ^= nums[i];
    }
    return res;
}